generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id                     String    @id @map("_id") // Use "_id" as the primary key
    email                  String    @unique
    stripeCustomerId       String?   @unique
    stripeSubscriptionId   String?   @unique
    stripePriceId          String?
    stripeCurrentPeriodEnd DateTime?

    // Define a relation to File and Message, but MongoDB doesn't enforce referential integrity
    files    File[]    @relation("userFiles")
    messages Message[] @relation("userMessages")
}

enum UploadStatus {
    PENDING
    PROCESSING
    FAILED
    SUCCESS
}

model File {
    id           String       @id @default(auto()) @map("_id") @db.ObjectId
    name         String
    uploadStatus UploadStatus @default(PENDING)
    url          String
    key          String
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt

    // Define a relation to User
    user    User?     @relation("userFiles", fields: [userId], references: [id])
    userId  String?
    Message Message[]
}

model Message {
    id            String   @id @default(auto()) @map("_id") @db.ObjectId
    text          String
    isUserMessage Boolean
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    user          User?    @relation("userMessages", fields: [userId], references: [id])
    userId        String?
    file          File?    @relation(fields: [fileId], references: [id])
    fileId        String?  @db.ObjectId
}
